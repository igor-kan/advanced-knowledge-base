[package]
name = "quantum-distributed-kg-2025"
version = "1.0.0"
edition = "2021"
authors = ["Quantum Distributed Knowledge Graph Team 2025"]
license = "MIT"
description = "Quantum-inspired distributed knowledge graph with infinite scalability - 2025 edition"
repository = "https://github.com/igor-kan/advanced-knowledge-base"
keywords = ["quantum", "distributed", "graph", "database", "infinite-scale"]
categories = ["database", "algorithms", "distributed-systems", "science", "mathematics"]

[lib]
name = "quantum_distributed_kg_2025"
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "quantum-cluster-node"
path = "src/bin/cluster_node.rs"

[[bin]]
name = "quantum-coordinator"
path = "src/bin/coordinator.rs"

[[bin]]
name = "quantum-benchmark"
path = "src/bin/benchmark.rs"

[dependencies]
# Core quantum and distributed computing libraries
tokio = { version = "1.40", features = ["full", "tracing", "macros"] }
async-std = { version = "1.12", features = ["attributes"] }
futures = { version = "0.3", features = ["std"] }
rayon = "1.10"
crossbeam = "0.8.4"
parking_lot = "0.12.3"
dashmap = "6.0"
flurry = "0.5"
lockfree = "0.5"

# Advanced networking and communication
tonic = { version = "0.12", features = ["gzip", "tls", "compression"] }
prost = "0.13"
hyper = { version = "1.4", features = ["full", "http1", "http2"] }
tower = { version = "0.4.13", features = ["full"] }
tower-http = { version = "0.5.2", features = ["full"] }

# Distributed consensus and coordination
etcd-rs = "2.0"
consul = "0.4"
raft = "0.7"
sled = "0.34.7"

# Advanced serialization and compression
serde = { version = "1.0.208", features = ["derive", "rc"] }
serde_json = "1.0.125"
bincode = "1.3.3"
postcard = { version = "1.0", features = ["alloc"] }
rmp-serde = "1.3"
lz4 = "1.24.1"
zstd = { version = "0.13.2", features = ["arrays", "experimental"] }

# Quantum-inspired algorithms and cryptography
quantum-random = "1.2"
rand = { version = "0.8", features = ["std", "small_rng"] }
rand_chacha = "0.3"
sha3 = "0.10"
blake3 = "1.5"
curve25519-dalek = "4.1"
ed25519-dalek = "2.1"

# High-performance data structures
ahash = "0.8.11"
smallvec = "1.13"
tinyvec = "1.8"
bytes = "1.7"
memmap2 = "0.9.4"

# Advanced metrics and observability
prometheus = { version = "0.13.4", features = ["process"] }
tracing = { version = "0.1.40", features = ["max_level_trace"] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
opentelemetry = { version = "0.24", features = ["metrics", "trace"] }

# Mathematical and scientific computing
nalgebra = { version = "0.33", features = ["serde-serialize", "rayon"] }
ndarray = { version = "0.16", features = ["blas", "rayon", "serde"] }
statrs = "0.17"
petgraph = { version = "0.6.5", features = ["serde-1"] }

# Graph processing foundations
indradb = { version = "4.1", features = ["rocksdb-datastore", "test-suite"] }

# Error handling and utilities
thiserror = "1.0.63"
anyhow = "1.0.86"
once_cell = "1.20"
uuid = { version = "1.10", features = ["v4", "serde"] }

# Time and scheduling
chrono = { version = "0.4", features = ["serde"] }
tokio-cron-scheduler = "0.11"

# System and OS integration
libc = "0.2"
nix = { version = "0.29", features = ["process", "signal", "net"] }

[target.'cfg(target_os = "linux")'.dependencies]
systemd = "0.10"
dbus = "0.9"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports", "csv_output"] }
proptest = "1.5"
tempfile = "3.12"
wiremock = "0.6"

[build-dependencies]
tonic-build = "0.12"
prost-build = "0.13"

[features]
default = ["quantum-optimization", "infinite-scale", "distributed"]

# Core quantum features
quantum-optimization = []
quantum-entanglement = []
quantum-superposition = []
quantum-interference = []

# Scalability features
infinite-scale = []
auto-sharding = []
elastic-scaling = []
load-balancing = []

# Distributed system features
distributed = ["raft", "etcd-rs"]
consensus = ["raft"]
fault-tolerance = []
Byzantine-tolerance = []

# Security features
encryption = ["curve25519-dalek", "ed25519-dalek"]
authentication = []
authorization = []

# Performance features
simd-optimization = []
memory-optimization = []
network-optimization = []

# Monitoring features
metrics = ["prometheus"]
tracing = ["opentelemetry"]
profiling = []

[profile.release]
# Maximum optimization for quantum-distributed performance
opt-level = 3
debug = false
strip = true
lto = "fat"
codegen-units = 1
panic = "abort"
overflow-checks = false

[profile.quantum]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1

[profile.distributed]
opt-level = 3
debug = true
lto = "thin" 
codegen-units = 4
overflow-checks = false

# Benchmarking configurations
[[bench]]
name = "quantum_operations"
harness = false
required-features = ["quantum-optimization"]

[[bench]]
name = "distributed_scalability"
harness = false
required-features = ["distributed", "infinite-scale"]

[[bench]]
name = "consensus_performance"
harness = false
required-features = ["consensus"]

# Examples
[[example]]
name = "quantum_cluster_setup"
path = "examples/cluster_setup.rs"
required-features = ["distributed"]

[[example]]
name = "infinite_scale_demo"
path = "examples/infinite_scale.rs"
required-features = ["infinite-scale"]

[[example]]
name = "quantum_algorithms_demo"
path = "examples/quantum_algorithms.rs"
required-features = ["quantum-optimization"]

# Protocol buffer definitions
[package.metadata.build]
protobuf_src = "proto"
protobuf_out_dir = "src/proto"

# Distributed deployment configuration
[package.metadata.distributed]
min_nodes = 3
max_nodes = 10000
replication_factor = 3
consensus_timeout_ms = 5000
heartbeat_interval_ms = 1000

# Quantum optimization parameters
[package.metadata.quantum]
superposition_depth = 16
entanglement_strength = 0.85
interference_threshold = 0.1
decoherence_time_ms = 100

# Performance targets
[package.metadata.performance]
target_ops_per_second = 10000000
target_latency_p99_ms = 1
target_throughput_gbps = 100
infinite_scale_nodes = 1000000